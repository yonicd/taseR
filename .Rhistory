x1=anti_join(a,x%>%select(Package,Version),by=c("Package","Version"))
View(x1)
download.packages(x1$Package[1],"c:\\r\\new\\")
download.packages(x1$Package[c(2,3)],"c:\\r\\new\\")
nrow(x1)
4:6/nrow(x1)
b=4:6
4:6/max(b)
pb <- txtProgressBar(...)
pb <- txtProgressBar()
for(i in 4:6/max(b)){
out=download.packages(x1$Package[i],"c:\\r\\new\\")
setTxtProgressBar(pb, i)
}
close(pb)
b=7:20
pb <- txtProgressBar(initial = 7,max=10)
for(i in b){
out=download.packages(x1$Package[i],"c:\\r\\new\\")
setTxtProgressBar(pb, i)
}
b
b=20:30
b=20:30
pb <- txtProgressBar(initial = min(b),min=min(b),max=max(b))
for(i in b){
out=download.packages(x1$Package[i],"c:\\r\\new\\")
setTxtProgressBar(pb = pb, value = i)
}
close(pb)
b=30:50
pb <- txtProgressBar(initial = min(b),min=min(b),max=max(b))
for(i in b){
out=download.packages(x1$Package[i],"c:\\r\\new\\")
setTxtProgressBar(pb = pb, value = i)
}
close(pb)
out=download.packages(x1$Package[-c(1:50)],"c:\\r\\new\\")
x=list.files("c:\\r\\new\\")
x=data.frame(file=x,x=gsub(".zip","",x))
x$Package=sapply(str_split(x$x,"_"),'[',1)
x$Version=sapply(str_split(x$x,"_"),'[',2)
x1=anti_join(a,x%>%select(Package,Version),by=c("Package","Version"))
x.new=x
x=list.files("c:\\r\\all\\")
x=data.frame(file=x,x=gsub(".zip","",x))
x$Package=sapply(str_split(x$x,"_"),'[',1)
x$Version=sapply(str_split(x$x,"_"),'[',2)
x=rbind(x,x.new)
x=distinct(x)
x=list.files("c:\\r\\all\\")
x=data.frame(file=x,x=gsub(".zip","",x))
x$Package=sapply(str_split(x$x,"_"),'[',1)
x$Version=sapply(str_split(x$x,"_"),'[',2)
x2=rbind(x,x.new)
x3=anti_join(a,x%>%select(Package,Version),by=c("Package","Version"))
rm(x2,x3)
View(x.new)
View(a)
a$file=paste0(paste(a$Package,a$Version,sep="_"),".zip)
a$file=paste0(paste(a$Package,a$Version,sep="_"),".zip")
View(a)
View(x.new)
a$file%in%x.new$file
x.new$file%in%a$file
which(!x.new$file%in%a$file)
View(x1)
x1$file=paste0(paste(x1$Package,x1$Version,sep="_"),".zip")
which(!x.new$file%in%x1$file)
which(x.new$file%in%x1$file)
which(x1$file%in%x.new$file)
x1=anti_join(a,x%>%select(Package,Version),by=c("Package","Version"))
x1=anti_join(a,x%>%select(Package,Version),by=c("Package","Version"))
x=list.files("c:\\r\\all\\")
x0==list.files("c:\\r\\new\\")
x0=list.files("c:\\r\\new\\")
x=c(x,x0)
x=data.frame(file=x,x=gsub(".zip","",x))
x$Package=sapply(str_split(x$x,"_"),'[',1)
x$Version=sapply(str_split(x$x,"_"),'[',2)
x$Version=str_replace_all(x$Version,"-",".")
x1=x%>%group_by(Package)%>%do(.,head(.,1))
x2=anti_join(a,x%>%select(Package,Version),by=c("Package","Version"))
View(x2)
x=list.files("c:\\r\\all\\")
x=data.frame(file=x,x=gsub(".zip","",x))
x$Package=sapply(str_split(x$x,"_"),'[',1)
x$Version=sapply(str_split(x$x,"_"),'[',2)
x$Version=str_replace_all(x$Version,"-",".")
x1=x%>%group_by(Package)%>%do(.,head(.,-1))
x=list.files("c:\\r\\all\\")
x=data.frame(file=x,x=gsub(".zip","",x))
x$Package=sapply(str_split(x$x,"_"),'[',1)
x$Version=sapply(str_split(x$x,"_"),'[',2)
x1=x%>%group_by(Package)%>%do(.,head(.,-1))
a=available.packages()
a=as.data.frame(available.packages())
x1=anti_join(a,x%>%select(Package,Version),by=c("Package","Version"))
x1$Package[-c(1:50)]
x=list.files("c:\\r\\all\\")
x0=list.files("c:\\r\\new\\")
x=c(x,x0)
x=data.frame(file=x,x=gsub(".zip","",x))
x$Package=sapply(str_split(x$x,"_"),'[',1)
x$Version=str_replace_all(x$Version,"-",".")
x$Version=sapply(str_split(x$x,"_"),'[',2)
x=data.frame(file=x,x=gsub(".zip","",x))
x=list.files("c:\\r\\all\\")
x0=list.files("c:\\r\\new\\")
x=c(x,x0)
x=data.frame(file=x,x=gsub(".zip","",x))
x$Package=sapply(str_split(x$x,"_"),'[',1)
x$Version=sapply(str_split(x$x,"_"),'[',2)
x$Version=str_replace_all(x$Version,"-",".")
x1=x%>%group_by(Package)%>%do(.,head(.,-1))
View(x1)
View(x)
x2=x%>%group_by(Package)%>%do(.,head(.,1))
rm(list=ls())
library(gtools)
install.packages("gtools")
library(gtools)
getDependencies("dplyr")
library(tools)
write_PACKAGES("C:\\R\\dplyr")
install.packages("dplyr",contriburl="file:///c:/r/dplyr/")
install.packages("dplyr",contriburl="file:////READYSHARE/USB_Storage/R/dplyr/")
install.packages("PerformanceAnalytics")
library("PerformanceAnalytics", lib.loc="~/R/win-library/3.2")
library(hvest)
library(rvest)
url.base="http://prices.shufersal.co.il/FileObject/UpdateCategory?catID=0&storeId=0&page="
max.page=as.numeric(gsub("[^1-9]","",html(paste0(url.base,1))%>%html_nodes(xpath="//div[@id='gridContainer']/table/tfoot/tr/td/a[6]")%>%html_attr("href")))
shufersal.url=html(paste0(url.base,max.page))%>%html_nodes("a")%>%html_attr("href")
shufersal.url=shufersal.url[grepl("Store",shufersal.url)]
temp <- tempfile()
download.file(shufersal.url,temp,quiet = T,mode="wb")
readLines(gzfile(temp),encoding = "UTF-8")
xmlParse(readLines(gzfile(temp),encoding = "UTF-8"))
a
packin=c('mvtnorm','lme4','glmnet','quadprog','plyr','grid','beepr','foreach','iterators','doParallel','dplyr')
install.packages(packin)
library(dplyr);library(rvest);library(RSelenium)
require(RSelenium)
fprof <- makeFirefoxProfile(list(browser.download.dir = "C:/Users/yoni/Documents/GitHub/supermarketprices",
browser.download.folderList = 2L,
browser.download.manager.showWhenStarting = FALSE,
browser.helperApps.neverAsk.saveToDisk = "application/zip"))
fprof <- makeFirefoxProfile(list(browser.download.dir = "C:/Users/yoni/Documents/GitHub/supermarketprices",
browser.download.folderList = 2L,
browser.download.manager.showWhenStarting = FALSE)
)
fprof <- makeFirefoxProfile(list(browser.download.dir = "C:/Users/yoni/Documents/GitHub/supermarketprices")
)
shiny::runApp('GitHub/Elections/shiny')
names(x)
shiny::runApp('GitHub/Elections/shiny')
shiny::runApp('GitHub/Elections/shiny')
x%>%mutate(Dateid=factor(Date),DatePoll=factor(paste(Dateid,Pollsterid,sep=".")))%>%View
x%>%filter(Date<=as.Date("2015-03-13"))%>%mutate(Dateid=factor(Date),DatePoll=factor(paste(Dateid,Pollsterid,sep=".")))%>%View
shiny::runApp('GitHub/Elections/shiny')
a=x%>%filter(Date<=as.Date("2015-03-13"))%>%mutate(Dateid=factor(Date),DatePoll=factor(paste(Dateid,Pollsterid,sep=".")))
a
warnings()
input=data.frame(poll=c(1,5))
nt=tail(levels(a$DatePoll),input$poll[2])
nt=tail(nt,input$poll[2]-input$poll[1]+1)
nt
a=a%>%filter(DatePoll%in%nt)
maxdate=max(a$Date)
a$nr=1:nrow(a)
out=ddply(a%>%select(Mandates.lb,Mandates.ub,nr),.(nr),
.fun = function(df) {
B=input$Boot
mout=cbind(as.matrix(sample(as.numeric(df[1]):as.numeric(df[2]),B,replace=T),ncol=1),1:B)
})
input=data.frame(Boot=50)
out=ddply(a%>%select(Mandates.lb,Mandates.ub,nr),.(nr),
.fun = function(df) {
B=input$Boot
mout=cbind(as.matrix(sample(as.numeric(df[1]):as.numeric(df[2]),B,replace=T),ncol=1),1:B)
})
names(out)[-1]=c("rMandates","bs.id")
a=left_join(out,a,by=c("nr"))
a=a%>%group_by(bs.id,Party)%>%summarise_each(funs(mean(.,na.rm = T)),Mandates,rMandates)%>%
mutate(rMandates=ifelse(floor(rMandates)<4,0,floor(rMandates)),
Mandates=ifelse(floor(Mandates)<4,0,floor(Mandates)))%>%arrange(Party)
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0,
share=factor(Party,labels=c(1,1,2,3,4,5,6,6,2,7,3)))
warnings()
View(df)
df=ddply(df,.(bs.id,variable),.fun = function(df){
for(i in (1:(120-sum(df$base.floor)))){
y1=(df%>%group_by(share)%>%summarise(group_pct=sum(base)/(sum(base.floor)+1))%>%filter(group_pct==max(group_pct)))$share
id=df$pct%in%max(df$pct[df$share==y1])
df$id[id]=i
df$base.floor[id]=df$base.floor[id]+1
df$add[id]=df$add[id]+1
df$pct[id]=df$base[id]/(df$base.floor[id]+1)}
return(df)
})
Party.En=x%>%filter(Election==2015)%>%select(Party,Party.En)%>%unique
df=left_join(df,Party.En,by="Party")
View(df)
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0,
share=droplevels(factor(Party,labels=c(1,1,2,3,4,5,6,6,2,7,3))))
shiny::runApp('GitHub/Elections/shiny')
View(x)
levels(x$Party)
levels(df$Party)
levels(factor(df$Party))
data.frame(Party=levels(factor(df$Party)),share=c(1,1,2,3,4,5,6,6,2,7,3))
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0)
df=left_join(df,data.frame(Party=levels(factor(df$Party)),share=c(1,1,2,3,4,5,6,6,2,7,3)),by="Party")
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0)
df=left_join(df,data.frame(Party=as.character(levels(factor(df$Party))),
share=c(1,1,2,3,4,5,6,6,2,7,3)),by="Party")
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
class(df$Party)
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0)
unique(df$Party)
df=left_join(df,data.frame(Party=unique(df$Party),
share=c(1,1,2,3,4,5,6,6,2,7,3)),by="Party")
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0)%>%ungroup
df=left_join(df,data.frame(Party=unique(df$Party),
share=c(1,1,2,3,4,5,6,6,2,7,3)),by="Party")
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0)
class(df$Party)
shares=data.frame(Party=unique(df$Party),share=c(1,1,2,3,4,5,6,6,2,7,3))
class(shares$Party)
shares=data.frame(Party=unique(df$Party),share=c(1,1,2,3,4,5,6,6,2,7,3))%>%mutate(Party=as.character(Party))
df=left_join(df,shares,by="Party")
View(df)
df=ddply(df,.(bs.id,variable),.fun = function(df){
for(i in (1:(120-sum(df$base.floor)))){
y1=(df%>%group_by(share)%>%summarise(group_pct=sum(base)/(sum(base.floor)+1))%>%filter(group_pct==max(group_pct)))$share
id=df$pct%in%max(df$pct[df$share==y1])
df$id[id]=i
df$base.floor[id]=df$base.floor[id]+1
df$add[id]=df$add[id]+1
df$pct[id]=df$base[id]/(df$base.floor[id]+1)}
return(df)
})
View(df)
Party.En=x%>%filter(Election==2015)%>%select(Party,Party.En)%>%unique
df=left_join(df,Party.En,by="Party")
View(df)
fill_var="Party"
pos="dodge"
yint=4
b.id=sample(1:input$Boot,1)
input=data.frame(Boot=50)
fill_var="Party"
pos="dodge"
yint=4
b.id=sample(1:input$Boot,1)
lin=list(df=df%>%filter(bs.id==b.id),df.full=df,fill_var=fill_var,pos=pos,yint=yint,maxdate=maxdate)
df=lin$df.full
base.lvl=df%>%filter(variable=="rMandates")%>%count(Party.En,Party,base.floor)
txt.lvl=df%>%filter(variable=="Mandates")%>%group_by(Party.En,Party)%>%summarise(base.floor=floor(mean(base.floor)))
txt.lvl=left_join(txt.lvl,base.lvl,by=c("Party.En","Party","base.floor"))
input$lang.sim=".En"
str_fill=paste0("Party",input$lang.sim)
if(input$lang.sim==""){
xl="מנדטים"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste("התפלגות סימולציה לחלוקה סופית של מנדטים לאחר אחוז החסימה וסיווג עודפים לפי מפלגה",
"משולש מהווה חציון המנדטים למפלגה על פי הסקרים בפועל",
lin$maxdate,sep="\n")
nm="מפלגה"
}else{
xl="Mandates"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste("Distribution of Simulated of Mandate Results Conditioned on Mandate Threshold and Surplus Agreements \n Triangle shows the Median Published Result",lin$maxdate,sep="\n")
nm="Party"
}
base.lvl$n=base.lvl$n/as.numeric(input$Boot)
txt.lvl$n=txt.lvl$n/as.numeric(input$Boot)
ggplot(base.lvl)+
geom_bar(aes_string(x="factor(base.floor)",y="n",fill=str_fill),stat="identity",position = "dodge")+
geom_point(aes(x=factor(base.floor),y=n+.02),size=3,shape=17,data=txt.lvl)+
facet_wrap(as.formula(paste0("~",str_fill)),scales="free_x")+theme_bw()+
ggtitle(ttl)+ylab(yl)+xlab(xl)+scale_fill_discrete(name=nm)+scale_y_continuous(label=percent)
View(base.lvl)
View(txt.lvl)
txt.lvl=df%>%filter(variable=="Mandates")%>%group_by(Party.En,Party)%>%summarise(base.floor=floor(mean(base.floor)))
View(txt.lvl)
txt.lvl=left_join(txt.lvl,base.lvl,by=c("Party.En","Party","base.floor"))
View(txt.lvl)
base.lvl=df%>%filter(variable=="rMandates")%>%count(Party.En,Party,base.floor)
View(base.lvl)
View(base.lvl)
View(txt.lvl)
is.na(txt.lvl$n)
which(is.na(txt.lvl$n))
View(txt.lvl)
txt.lvl$n[which(is.na(txt.lvl$n))]=0
View(txt.lvl)
str_fill=paste0("Party",input$lang.sim)
if(input$lang.sim==""){
xl="מנדטים"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste("התפלגות סימולציה לחלוקה סופית של מנדטים לאחר אחוז החסימה וסיווג עודפים לפי מפלגה",
"משולש מהווה חציון המנדטים למפלגה על פי הסקרים בפועל",
lin$maxdate,sep="\n")
nm="מפלגה"
}else{
xl="Mandates"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste("Distribution of Simulated of Mandate Results Conditioned on Mandate Threshold and Surplus Agreements \n Triangle shows the Median Published Result",lin$maxdate,sep="\n")
nm="Party"
}
base.lvl$n=base.lvl$n/as.numeric(input$Boot)
txt.lvl$n=txt.lvl$n/as.numeric(input$Boot)
ggplot(base.lvl)+
geom_bar(aes_string(x="factor(base.floor)",y="n",fill=str_fill),stat="identity",position = "dodge")+
geom_point(aes(x=factor(base.floor),y=n+.02),size=3,shape=17,data=txt.lvl)+
facet_wrap(as.formula(paste0("~",str_fill)),scales="free_x")+theme_bw()+
ggtitle(ttl)+ylab(yl)+xlab(xl)+scale_fill_discrete(name=nm)+scale_y_continuous(label=percent)
View(txt.lvl)
df=lin$df.full
base.lvl=df%>%filter(variable=="rMandates")%>%count(Party.En,Party,base.floor)
txt.lvl=df%>%filter(variable=="Mandates")%>%group_by(Party.En,Party)%>%summarise(base.floor=floor(mean(base.floor)))
txt.lvl=left_join(txt.lvl,base.lvl,by=c("Party.En","Party","base.floor"))
txt.lvl$n[which(is.na(txt.lvl$n))]=0
str_fill=paste0("Party",input$lang.sim)
if(input$lang.sim==""){
xl="מנדטים"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste("התפלגות סימולציה לחלוקה סופית של מנדטים לאחר אחוז החסימה וסיווג עודפים לפי מפלגה",
"משולש מהווה חציון המנדטים למפלגה על פי הסקרים בפועל",
lin$maxdate,sep="\n")
nm="מפלגה"
}else{
xl="Mandates"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste("Distribution of Simulated of Mandate Results Conditioned on Mandate Threshold and Surplus Agreements \n Triangle shows the Median Published Result",lin$maxdate,sep="\n")
nm="Party"
}
base.lvl$n=base.lvl$n/as.numeric(input$Boot)
txt.lvl$n=txt.lvl$n/as.numeric(input$Boot)
View(txt.lvl)
ggplot(base.lvl)+
geom_bar(aes_string(x="factor(base.floor)",y="n",fill=str_fill),stat="identity",position = "dodge")+
geom_point(aes(x=factor(base.floor),y=n+.02),size=3,shape=17,data=txt.lvl)+
facet_wrap(as.formula(paste0("~",str_fill)),scales="free_x")+theme_bw()+
ggtitle(ttl)+ylab(yl)+xlab(xl)+scale_fill_discrete(name=nm)+scale_y_continuous(label=percent)
shiny::runApp('GitHub/Elections/shiny')
shiny::runApp('GitHub/Elections/shiny')
format(as.Date('12/30/1996','%m/%d/%Y'),"%A")
teva=read.csv("C:\\Users\\yoni\\Documents\\GitHub\\tase\\TEVA Historical Prices_r.csv")
View(teva)
teva$Open[1]=="#N/A"
teva$Open[teva$Open=="#N/A"]=NA
teva$Volume[teva$Volume=="#N/A"]=NA
teva$Date=as.Date(teva$Date,'%d/%m/%Y')
teva=teva%>%melt(.,id="Date")
teva=read.csv("C:\\Users\\yoni\\Documents\\GitHub\\tase\\TEVA Historical Prices_r.csv")
teva$Open[teva$Open=="#N/A"]=NA
teva$Volume[teva$Volume=="#N/A"]=NA
teva$Date=as.Date(teva$Date,'%d/%m/%Y')
teva=teva%>%melt(.,id="Date")
View(teva)
ggplot(teva%>%filter(variable!="Volume"),aes(x=Date,y=value,colour=variable))+geom_line()
ggplot(teva%>%filter(variable!="Volume")%>%mutate(value=as.numeric(value)),aes(x=Date,y=value,colour=variable))+geom_line()
ggplot(teva%>%filter(variable!="Volume")%>%mutate(value=as.numeric(value)),aes(x=Date,y=value,colour=variable))+geom_line()+facet_wrap(~variable)
teva=read.csv("C:\\Users\\yoni\\Documents\\GitHub\\tase\\TEVA Historical Prices_r.csv")
teva$Open[teva$Open=="#N/A"]=NA
teva$Volume[teva$Volume=="#N/A"]=NA
teva$Date=as.Date(teva$Date,'%d/%m/%Y')
teva%>%mutate_each(funs(as.numeric),-Date)
teva=teva%>%mutate_each(funs(as.numeric),-Date)
View(teva)
teva=teva%>%filter(!is.na(Open))
View(teva)
teva=read.csv("C:\\Users\\yoni\\Documents\\GitHub\\tase\\TEVA Historical Prices.csv",skip = 1)
teva=read.csv("C:\\Users\\yoni\\Documents\\GitHub\\tase\\TEVA Historical Prices.csv",skip = 1)
View(teva)
teva=read.csv("C:\\Users\\yoni\\Documents\\GitHub\\tase\\TEVA Historical Prices.csv",skip = 1,header = T)
teva=read.csv("C:\\Users\\yoni\\Documents\\GitHub\\tase\\TEVA Historical Prices.csv",skip = 1,header = T)
View(teva)
View(teva)
teva=teva%>%select(-Volume)
View(teva)
teva$Date=as.Date(teva$Date,'%m/%d/%Y')
teva=teva%>%mutate_each(funs(as.numeric),-Date)
teva=teva%>%filter(!is.na(Open))%>%arrange(Date)
View(teva)
teva1=teva%>%melt(.,id="Date")
ggplot(teva,aes(x=Date,y=value,colour=variable))+geom_line()
ggplot(teva1,aes(x=Date,y=value,colour=variable))+geom_line()
22320/22270
View(teva1)
View(teva)
59.40/59.10
setwd("C:\\Users\\yoni\\Documents\\GitHub\\tase")
stockID=read.csv("stockID.csv")
stockID=stockID%>%mutate(companyID=str_pad(companyID,width = 6,side="left",pad = "0"),
shareID=str_pad(shareID,width = 8,side="left",pad = "0"))
RSelenium::startServer()
remDr <- remoteDriver()
remDr$open(silent = F)
library(lubridate)
library(rvest)
library(XML)
library(plyr)
library(dplyr)
library(RSelenium)
library(stringr)
setwd("C:\\Users\\yoni\\Documents\\GitHub\\tase")
stockID=read.csv("stockID.csv")
stockID=stockID%>%mutate(companyID=str_pad(companyID,width = 6,side="left",pad = "0"),
shareID=str_pad(shareID,width = 8,side="left",pad = "0"))
RSelenium::startServer()
remDr <- remoteDriver()
remDr$open(silent = F)
df.in=stockID%>%filter(Name%in%c("TEVA"))
df.in$from.date=format(as.Date("2000-01-01"),"%d/%m/%Y")
df.in$to.date=format(Sys.Date(),"%d/%m/%Y")
df.in
tase.security.daily=ddply(df.in,.(Name),.fun = function(df){
#set url
url=paste0("http://www.tase.co.il/Eng/general/company/Pages/companyHistoryData.aspx?companyID=",
df$companyID,
"&subDataType=",0,
"&shareID=",df$shareID)
#navigate to webpage
remDr$navigate(url)
#enter ui variables
webElem <- remDr$findElement(using = 'xpath', value = '//*[@id="ctl00_SPWebPartManager1_g_301c6a3d_c058_41d6_8169_6d26c5d97050_ctl00_HistoryData1_rbFrequency1"]')
webElem$setElementAttribute(attributeName = 'checked',value = 'true')
webElem <- remDr$findElement(using = 'xpath', value = '//*[@id="ctl00_SPWebPartManager1_g_301c6a3d_c058_41d6_8169_6d26c5d97050_ctl00_HistoryData1_rbPeriod8"]')
webElem$setElementAttribute(attributeName = 'checked',value = 'true')
remDr$executeScript(paste0("$('#ctl00_SPWebPartManager1_g_301c6a3d_c058_41d6_8169_6d26c5d97050_ctl00_HistoryData1_dailyFromCalendar_TaseCalendar_dateInput_TextBox').val('",df$from.date,"');"), args = list())
remDr$executeScript(paste0("$('#ctl00_SPWebPartManager1_g_301c6a3d_c058_41d6_8169_6d26c5d97050_ctl00_HistoryData1_dailyToCalendar_TaseCalendar_dateInput_TextBox').val('",df$to.date,"');"), args = list())
#click button
remDr$executeScript("$('#trhistory0').find(':button').click();", args = list())
#wait for data to load
Sys.sleep(5)
#import html table to parse
webElem <- remDr$findElement(using='xpath',value = '//*[@id="ctl00_SPWebPartManager1_g_301c6a3d_c058_41d6_8169_6d26c5d97050_ctl00_HistoryData1_gridHistoryData_DataGrid1"]')
out=htmlParse(remDr$getPageSource(),asText = T)
dataNode=getNodeSet(out,"//table[contains(@id,'gridHistoryData_DataGrid1')]")
metaNode =getNodeSet(out,("//table[contains(@id,'securityGrid_DataGrid1')]"))
#parse table into data.frame
tase.out=left_join(
readHTMLTable(metaNode[[1]],header = T)[1,c(1:4)]%>%mutate(x=1),
readHTMLTable(dataNode[[1]],header = T)%>%
mutate_each(funs(as.Date(.,"%d/%m/%Y")),contains("date"))%>%
mutate_each(funs(as.numeric(gsub("[,|%]","",.))),
-contains("date"),-ends_with("type"))%>%mutate(x=1),
by="x")%>%
select(-x)
return(tase.out)},
.progress = "text")
View(tase.security.daily)
names(tase.security.daily)
names(tase.security.daily)[7]
names(tase.security.daily)[7]="Close"
ggplot(tase.security.daily,aes(x=Date,y=Close))+geom_line()
ggplot(teva1%>%filter(Date>=as.Date("2000-01-01")),aes(x=Date,y=value,colour=variable))+geom_line()
remDr$closeall()
names(tase.security.daily)
names(tase.security.daily)[6]="AdjClose"
ggplot(tase.security.daily%>%select(Date,Close,AdjClose)%>%melt(.,id="Date"),aes(x=Date,y=value,colour=variable))+geom_line()
